{"ast":null,"code":"import React,{useState,useEffect}from'react';import{motion,AnimatePresence}from'framer-motion';import{Toaster,toast}from'react-hot-toast';import axios from'axios';import'./styles/mobile.css';import{AuthProvider}from'./contexts/AuthContext';import AuthModal from'./components/AuthModal';import ProtectedRoute from'./components/ProtectedRoute';import Header from'./components/Header';import Navigation from'./components/Navigation';import ChatBox from'./components/ChatBox';import ChatInput from'./components/ChatInput';import UploadCard from'./components/UploadCard';import MedicineCard from'./components/MedicineCard';import MedicineCorrectionCard from'./components/MedicineCorrectionCard';import ExerciseRecommendations from'./components/ExerciseRecommendations';import Dashboard from'./components/Dashboard';import Profile from'./components/Profile';import Privacy from'./components/Privacy';import VoiceInterface from'./components/VoiceInterface';import ExercisePlanner from'./components/ExercisePlanner';import{Bot,FileText,AlertCircle,AlertTriangle,Activity}from'lucide-react';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_URL||'http://localhost:8000/api/v1';function App(){const[currentPage,setCurrentPage]=useState('chat');const[isDarkMode,setIsDarkMode]=useState(false);const[deferredPrompt,setDeferredPrompt]=useState(null);const[showInstallPrompt,setShowInstallPrompt]=useState(false);const[messages,setMessages]=useState([]);const[isTyping,setIsTyping]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const[medicines,setMedicines]=useState([]);const[medicineCorrections,setMedicineCorrections]=useState([]);const[extractedText,setExtractedText]=useState('');const[isChatProcessing,setIsChatProcessing]=useState(false);const[showExerciseRecommendations,setShowExerciseRecommendations]=useState(false);const[currentPrescriptionFile,setCurrentPrescriptionFile]=useState(null);const[showAuthModal,setShowAuthModal]=useState(false);const[authModalMode,setAuthModalMode]=useState('login');// Dark mode effect\nuseEffect(()=>{if(isDarkMode){document.documentElement.classList.add('dark');}else{document.documentElement.classList.remove('dark');}},[isDarkMode]);// PWA install prompt handling\nuseEffect(()=>{const handleBeforeInstallPrompt=e=>{e.preventDefault();setDeferredPrompt(e);setShowInstallPrompt(true);};window.addEventListener('beforeinstallprompt',handleBeforeInstallPrompt);return()=>{window.removeEventListener('beforeinstallprompt',handleBeforeInstallPrompt);};},[]);// Auth modal event handling\nuseEffect(()=>{const handleOpenAuthModal=event=>{const{mode}=event.detail||{};setAuthModalMode(mode||'login');setShowAuthModal(true);};window.addEventListener('openAuthModal',handleOpenAuthModal);return()=>{window.removeEventListener('openAuthModal',handleOpenAuthModal);};},[]);const toggleDarkMode=()=>{setIsDarkMode(!isDarkMode);};const addMessage=(sender,content)=>{const newMessage={sender,content,timestamp:new Date().toISOString()};setMessages(prev=>[...prev,newMessage]);};const processPrescription=async file=>{setIsProcessing(true);setIsTyping(true);try{// Add user message\naddMessage('user',`Uploaded prescription: ${file.name}`);// Step 1: Extract text using OCR\nconst formData=new FormData();formData.append('file',file);const ocrResponse=await axios.post(`${API_BASE_URL}/ocr`,formData,{headers:{'Content-Type':'multipart/form-data'}});if(!ocrResponse.data.success){throw new Error(ocrResponse.data.message);}const extractedText=ocrResponse.data.text;setExtractedText(extractedText);// Add AI message about OCR\naddMessage('ai',`I've extracted the text from your prescription. Found ${extractedText.split(' ').length} words.`);// Step 2: Extract medicine names\nconst medsResponse=await axios.post(`${API_BASE_URL}/extract-meds`,{prescription_text:extractedText});if(!medsResponse.data.success){throw new Error('Could not identify medicines in the prescription');}const medicineData=medsResponse.data.medicines;const medicineNames=medicineData.map(med=>med.corrected);// Store correction data for display\nsetMedicineCorrections(medicineData);// Add AI message about medicines found with corrections\nlet medicineMessage=`I found ${medicineNames.length} medicine(s) in your prescription: ${medicineNames.join(', ')}`;if(medsResponse.data.correction_summary&&medsResponse.data.correction_summary!==\"All medicine names were accurate.\"){medicineMessage+=`\\n\\n${medsResponse.data.correction_summary}`;}addMessage('ai',medicineMessage);// Step 3: Get detailed medicine information\nconst medInfoResponse=await axios.post(`${API_BASE_URL}/med-info`,{medicines:medicineNames});if(!medInfoResponse.data.success){throw new Error('Could not retrieve medicine information');}const medicinesInfo=medInfoResponse.data.medicines_info;setMedicines(medicinesInfo);// Add final AI message\naddMessage('ai',`I've analyzed your prescription and prepared detailed information for each medicine. You can view the details below.`);toast.success('Prescription processed successfully!');}catch(error){console.error('Error processing prescription:',error);// Check for Tesseract not installed error\nif(error.message&&error.message.includes('Tesseract OCR is not installed')){addMessage('ai',`Sorry, I encountered an error: Tesseract OCR is not installed on the server. Please contact the administrator to install Tesseract OCR.`);toast.error('Tesseract OCR is not installed on the server',{icon:/*#__PURE__*/_jsx(AlertTriangle,{className:\"text-amber-500\"}),duration:6000});}else{addMessage('ai',`Sorry, I encountered an error while processing your prescription: ${error.message}. Please try again with a clearer image.`);toast.error('Failed to process prescription. Please try again.');}}finally{setIsTyping(false);setIsProcessing(false);}};const handleFileUpload=file=>{setCurrentPrescriptionFile(file);processPrescription(file);};const clearResults=()=>{setMedicines([]);setMedicineCorrections([]);setExtractedText('');setMessages([]);setCurrentPrescriptionFile(null);setShowExerciseRecommendations(false);};const handleExerciseRecommendations=()=>{if(currentPrescriptionFile){setShowExerciseRecommendations(true);}else{toast.error('Please upload a prescription first');}};const handleChatMessage=async message=>{setIsChatProcessing(true);setIsTyping(true);try{// Add user message\naddMessage('user',message);// Get context from current medicines\nconst context=medicines.length>0?`Current medicines: ${medicines.map(m=>m.name).join(', ')}`:'';// Send to chat API\nconst response=await axios.post(`${API_BASE_URL}/chat`,{message:message,context:context});if(response.data.success){addMessage('ai',response.data.response);}else{addMessage('ai','Sorry, I encountered an error. Please try again.');}}catch(error){console.error('Chat error:',error);addMessage('ai','Sorry, I encountered an error while processing your message. Please try again.');}finally{setIsTyping(false);setIsChatProcessing(false);}};// Handle voice commands\nconst handleVoiceCommand=(transcript,confidence,result)=>{console.log('Voice command:',{transcript,confidence,result});if((result===null||result===void 0?void 0:result.action)==='navigate'){setCurrentPage(result.target);}// Add more voice command handling as needed\n};const handleInstallApp=async()=>{if(deferredPrompt){deferredPrompt.prompt();const{outcome}=await deferredPrompt.userChoice;if(outcome==='accepted'){console.log('User accepted the install prompt');}setDeferredPrompt(null);setShowInstallPrompt(false);}};const dismissInstallPrompt=()=>{setShowInstallPrompt(false);};const renderCurrentPage=()=>{switch(currentPage){case'dashboard':return/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Dashboard,{})});case'profile':return/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(Profile,{})});case'privacy':return/*#__PURE__*/_jsx(Privacy,{});case'planner':return/*#__PURE__*/_jsx(ProtectedRoute,{children:/*#__PURE__*/_jsx(ExercisePlanner,{})});case'voice':return/*#__PURE__*/_jsx(VoiceInterface,{onVoiceCommand:handleVoiceCommand});case'chat':default:return/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-8\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"grid grid-cols-1 lg:grid-cols-3 gap-8 h-[calc(100vh-12rem)]\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"lg:col-span-2\",children:/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,x:-20},animate:{opacity:1,x:0},transition:{duration:0.5},className:\"glass-card rounded-2xl h-full flex flex-col\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"p-6 border-b border-gray-200 dark:border-gray-700\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"text-xl font-semibold text-gray-800 dark:text-gray-200\",children:\"Chat with Rx Assistant\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm text-gray-600 dark:text-gray-400 mt-1\",children:\"Ask questions about your medicines or upload a prescription\"})]}),/*#__PURE__*/_jsx(ChatBox,{messages:messages,isTyping:isTyping}),/*#__PURE__*/_jsx(\"div\",{className:\"p-4 border-t border-gray-200 dark:border-gray-700\",children:/*#__PURE__*/_jsx(ChatInput,{onSendMessage:handleChatMessage,isProcessing:isChatProcessing})})]})}),/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-6\",children:[/*#__PURE__*/_jsx(UploadCard,{onFileUpload:handleFileUpload,isProcessing:isProcessing}),/*#__PURE__*/_jsx(AnimatePresence,{children:(medicines.length>0||extractedText)&&/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},exit:{opacity:0,y:-20},transition:{duration:0.5},className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex justify-end space-x-3\",children:[currentPrescriptionFile&&/*#__PURE__*/_jsxs(motion.button,{onClick:handleExerciseRecommendations,className:\"px-4 py-2 text-sm bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors flex items-center space-x-2\",whileHover:{scale:1.05},whileTap:{scale:0.95},children:[/*#__PURE__*/_jsx(Activity,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"Get Exercise Recommendations\"})]}),/*#__PURE__*/_jsx(motion.button,{onClick:clearResults,className:\"px-4 py-2 text-sm text-gray-600 dark:text-gray-400 hover:text-gray-800 dark:hover:text-gray-200 transition-colors\",whileHover:{scale:1.05},whileTap:{scale:0.95},children:\"Clear Results\"})]}),extractedText&&/*#__PURE__*/_jsxs(motion.div,{initial:{opacity:0},animate:{opacity:1},className:\"glass-card rounded-xl p-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2 mb-3\",children:[/*#__PURE__*/_jsx(FileText,{className:\"w-5 h-5 text-blue-600 dark:text-blue-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-sm font-medium text-gray-800 dark:text-gray-200\",children:\"Extracted Text\"})]}),/*#__PURE__*/_jsx(\"p\",{className:\"text-xs text-gray-600 dark:text-gray-400 leading-relaxed\",children:extractedText})]}),medicineCorrections.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(AlertTriangle,{className:\"w-5 h-5 text-yellow-600 dark:text-yellow-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-800 dark:text-gray-200\",children:\"Medicine Verification\"})]}),medicineCorrections.map((medicine,index)=>/*#__PURE__*/_jsx(MedicineCorrectionCard,{medicineData:medicine},index))]}),medicines.length>0&&/*#__PURE__*/_jsxs(\"div\",{className:\"space-y-4\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center space-x-2\",children:[/*#__PURE__*/_jsx(Bot,{className:\"w-5 h-5 text-green-600 dark:text-green-400\"}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-lg font-semibold text-gray-800 dark:text-gray-200\",children:\"Medicine Analysis\"})]}),/*#__PURE__*/_jsx(\"div\",{className:\"space-y-4\",children:medicines.map((medicine,index)=>/*#__PURE__*/_jsx(MedicineCard,{medicine:medicine,index:index},index))})]})]})})]})]}),messages.length===0&&!isProcessing&&/*#__PURE__*/_jsx(motion.div,{initial:{opacity:0,y:20},animate:{opacity:1,y:0},className:\"text-center py-12\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"max-w-md mx-auto\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"w-20 h-20 bg-gradient-to-r from-primary-500 to-secondary-500 rounded-full flex items-center justify-center mx-auto mb-6\",children:/*#__PURE__*/_jsx(Bot,{className:\"w-10 h-10 text-white\"})}),/*#__PURE__*/_jsx(\"h3\",{className:\"text-2xl font-bold text-gray-800 dark:text-gray-200 mb-4\",children:\"Welcome to Rx Assistant\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-gray-600 dark:text-gray-400 mb-6\",children:\"Upload a prescription image to get detailed information about your medications, including dosage, side effects, and precautions.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"flex items-center justify-center space-x-2 text-sm text-gray-500 dark:text-gray-400\",children:[/*#__PURE__*/_jsx(AlertCircle,{className:\"w-4 h-4\"}),/*#__PURE__*/_jsx(\"span\",{children:\"This is for educational purposes only. Always consult a healthcare professional.\"})]})]})})]});}};return/*#__PURE__*/_jsxs(\"div\",{className:\"min-h-screen bg-gradient-to-br from-primary-50 to-secondary-50 dark:from-gray-900 dark:to-gray-800\",children:[/*#__PURE__*/_jsx(Toaster,{position:\"top-right\",toastOptions:{duration:4000,style:{background:isDarkMode?'#374151':'#fff',color:isDarkMode?'#f9fafb':'#111827'}}}),showInstallPrompt&&/*#__PURE__*/_jsx(\"div\",{className:\"install-prompt\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"install-prompt-content\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Install Rx Assistant App\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Add Rx Assistant to your home screen for a better experience!\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"install-prompt-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:handleInstallApp,className:\"btn btn-primary\",children:\"Install\"}),/*#__PURE__*/_jsx(\"button\",{onClick:dismissInstallPrompt,className:\"btn btn-secondary\",children:\"Maybe Later\"})]})]})}),/*#__PURE__*/_jsx(Header,{isDarkMode:isDarkMode,toggleDarkMode:toggleDarkMode}),/*#__PURE__*/_jsx(Navigation,{activeTab:currentPage,setActiveTab:setCurrentPage,isDarkMode:isDarkMode}),/*#__PURE__*/_jsx(\"main\",{className:\"safe-area-top safe-area-bottom\",children:renderCurrentPage()}),showExerciseRecommendations&&/*#__PURE__*/_jsx(ExerciseRecommendations,{prescriptionFile:currentPrescriptionFile,onClose:()=>setShowExerciseRecommendations(false)}),/*#__PURE__*/_jsx(AuthModal,{isOpen:showAuthModal,onClose:()=>setShowAuthModal(false),initialMode:authModalMode})]});}function AppWithAuth(){return/*#__PURE__*/_jsx(AuthProvider,{children:/*#__PURE__*/_jsx(App,{})});}export default AppWithAuth;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}